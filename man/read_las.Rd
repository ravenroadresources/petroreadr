% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_las_R6.R
\name{read_las}
\alias{read_las}
\title{Read .las logs file}
\usage{
read_las(filename, verbose = FALSE)
}
\arguments{
\item{filename}{character string or array of characters string giving the name or path of the file to be read.
If \code{lenght(filename) == 1}, the function returns a `las` object.
If \code{lenght(filename) > 1}, the behaviour is as follows:
\itemize{
  \item{all files refers to the same `WELL`:} {data are joined using \code{dplyr::left_join(by = c("WELL", "DEPTH"))},
        retunring a `las` object}
  \item{each file refers to different `WELL`s:} {data are row-binded, returning a `mlas` object.
        NOTE: the function uses \code{dplyr::bind_rows}: each track will be added as a column and
        missing/new tracks will be filled with NA where not present }
  \item{cambination of files referring to the same well and different wells:} {This case is still not handled}}}

\item{verbose}{logical, define if the functions print the name of the file read. Default = FALSE}
}
\value{
an R6 object of class \code{las} or \code{mlas}
}
\description{
This function read well logs data from .las files and return a `las` or `mlas` objetc.
   To obtain just the data.frame with logs data, just add \code{$data} at the end of \code{read_las()}. See examples.
   If the \code{filename} you provide does not existe, the function stops and return an error message.
}
\note{
\code{read_las} has been tested to LAS 2.0 standard, check:
    <http://www.cwls.org/wp-content/uploads/2017/02/Las2_Update_Feb2017.pdf>
}
\examples{
\dontrun{
setwd(file.path("pathname"))
las_obj <- read_las("filename.las")

las_obj <- read_las(file.path("pathname", "filename.las")

las_obj <- read_las(file.path("pathname", c("filename_1.las", "filename_2.las")))
class(las_obj)
# "las"

las_obj <- read_las(file.path("pathname", c("filename_1.las", "filename_2.las")))$data
class(las_obj)
# "data.frame"

lasfiles <- list.files("pathname")
lasfiles <- lasfiles[grepl(".las", lasfiles)]
read_las(file.path("pathname", lasfiles), verbose = TRUE)
}

}
